{"version":3,"sources":["RecipeCreate.js","RecipeCard.js","RecipeList.js","RecipeData.js","App.js","index.js"],"names":["RecipeCreate","addRecipe","initialFormState","name","cuisine","photo","ingredients","preparation","useState","formData","setFormData","handleChange","target","value","onSubmit","event","preventDefault","id","onChange","placeholder","type","RecipeCard","recipe","deleteRecipe","Fragment","src","className","onClick","RecipeList","recipes","map","index","key","RecipeData","App","setRecipes","filter","newRecipe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNA+FeA,MA7Ff,SAAsB,GAAgB,IAAdC,EAAS,EAATA,UAKhBC,EAAmB,CACvBC,KAAK,GACLC,QAAQ,GACRC,MAAM,GACNC,YAAY,GACZC,YAAY,IAGd,EAAgCC,mBAASN,GAAiB,mBAAnDO,EAAQ,KAAEC,EAAW,KAEtBC,EAAe,SAAH,GAAkB,IAAbC,EAAM,EAANA,OACrBF,EAAY,2BAAID,GAAQ,kBAAGG,EAAOT,KAAMS,EAAOC,UAWjD,OACE,0BAAMV,KAAK,SAASW,SATD,SAACC,GACpBA,EAAMC,iBACNf,EAAUQ,GACVC,EAAYR,KAOV,+BACE,+BACE,4BACE,4BACA,2BACEe,GAAG,OACHd,KAAK,OACLe,SAAUP,EACVE,MAAOJ,EAASN,KAChBgB,YAAY,UAId,4BACA,2BACEF,GAAG,UACHd,KAAK,UACLe,SAAUP,EACVE,MAAOJ,EAASL,QAChBe,YAAY,aAId,4BACA,2BACEF,GAAG,QACHd,KAAK,QACLe,SAAUP,EACVE,MAAOJ,EAASJ,MAChBc,YAAY,SAIb,4BACD,8BACEF,GAAG,cACHd,KAAK,cACLe,SAAUP,EACVE,MAAOJ,EAASH,YAChBa,YAAY,iBAId,4BACA,8BACEF,GAAG,cACHd,KAAK,cACLe,SAAUP,EACVE,MAAOJ,EAASF,YAChBY,YAAY,iBAKd,4BACE,4BAAQC,KAAK,UAAQ,gBClFpB,SAASC,EAAW,GAA2B,IAAzBC,EAAM,EAANA,OAAQC,EAAY,EAAZA,aAC3C,OACE,kBAAC,IAAMC,SAAQ,KACb,4BACI,gCAAMF,EAAOnB,MACb,gCAAMmB,EAAOlB,SACb,gCAAK,yBAAKqB,IAAKH,EAAOjB,QAAQ,KAC9B,wBAAIqB,UAAU,cAAa,2BAAIJ,EAAOhB,cACtC,wBAAIoB,UAAU,cAAa,2BAAIJ,EAAOf,cACxC,4BACE,4BACEJ,KAAK,SACLc,GAAIK,EAAOnB,KACXwB,QAASJ,GAAa,aCkBnBK,MAhCf,SAAoB,GAA4B,IAA1BC,EAAO,EAAPA,QAASN,EAAY,EAAZA,aAM7B,OACE,yBAAKG,UAAU,eACb,+BACE,+BACE,4BACE,oCACA,uCACA,qCACA,2CACA,2CACA,yCAGJ,+BACGG,EAAQC,KAAI,SAACR,EAAQS,GAAK,OAAK,kBAACV,EAAU,CACtCW,IAAKD,EACLT,OAAQA,EACRC,aAAcA,WCJdU,EAjBI,CACjB,CACE9B,KAAM,uBACNC,QAAS,WACTC,MAAO,gGACPC,YAAa,sJACbC,YAAa,4RAEf,CACEJ,KAAM,YACNC,QAAS,UACTC,MAAO,4EACPC,YAAa,mNACbC,YAAa,kKCSF2B,MArBf,WACE,MAA8B1B,mBAASyB,GAAW,mBAA3CJ,EAAO,KAAEM,EAAU,KAW1B,OACE,yBAAKT,UAAU,OACb,gCAAQ,uDACR,kBAAC,EAAU,CAACG,QAASA,EAASN,aAVZ,SAAH,OAAKX,EAAM,EAANA,OAAM,OAAMuB,EAAWN,EAAQO,QAAO,SAAAd,GAAM,OAAIA,EAAOnB,OAASS,EAAOK,UAW3F,kBAAC,EAAY,CAAChB,UAbA,SAAAoC,GAAS,OAAIF,EAAW,GAAD,mBAAKN,GAAO,CAAEQ,UCLzDC,IAASC,OACP,kBAAC,IAAMC,WAAU,KACf,kBAAC,EAAG,OAENC,SAASC,eAAe,U","file":"static/js/main.a003e3dc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction RecipeCreate({ addRecipe }) {\n  // TODO: When the form is submitted, a new recipe should be created, and the form contents cleared.\n  // TODO: Add the required input and textarea form elements.\n  // TODO: Add the required submit and change handlers\n  \n  const initialFormState = {\n    name:\"\",\n    cuisine:\"\",\n    photo:\"\",\n    ingredients:\"\",\n    preparation:\"\",\n  }\n  \n  const [formData, setFormData] = useState(initialFormState);\n  \n  const handleChange = ({target}) => {\n    setFormData({...formData, [target.name]:target.value});\n  }\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addRecipe(formData);\n    setFormData(initialFormState);\n  }\n\n  \n  \n  return (\n    <form name=\"create\" onSubmit={handleSubmit}>\n      <table>\n        <tbody>\n          <tr>\n            <td>\n            <input\n              id='name'\n              name='name'\n              onChange={handleChange}\n              value={formData.name}\n              placeholder=\"Name\"\n              />\n            </td>\n            \n            <td>\n            <input\n              id='cuisine'\n              name='cuisine'\n              onChange={handleChange}\n              value={formData.cuisine}\n              placeholder=\"Cuisine\"\n              />\n            </td>\n            \n            <td>\n            <input\n              id='photo'\n              name='photo'\n              onChange={handleChange}\n              value={formData.photo}\n              placeholder=\"URL\"\n              />\n            </td>\n            \n             <td>\n            <textarea\n              id='ingredients'\n              name='ingredients'\n              onChange={handleChange}\n              value={formData.ingredients}\n              placeholder=\"Ingredients\"\n              />\n            </td>\n            \n            <td>\n            <textarea\n              id='preparation'\n              name='preparation'\n              onChange={handleChange}\n              value={formData.preparation}\n              placeholder=\"Preparation\"\n              />\n            </td>\n            \n            \n            <td>\n              <button type=\"submit\">Create</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nexport default RecipeCreate;\n","import React from \"react\";\n\n\n// Create individual recipe cards\nexport default function RecipeCard({ recipe, deleteRecipe }) {\n  return (\n    <React.Fragment>\n      <tr>\n          <td> {recipe.name}</td>\n          <td> {recipe.cuisine}</td>\n          <td> <img src={recipe.photo}/> </td>\n          <td className=\"content_td\"><p>{recipe.ingredients}</p></td>\n          <td className=\"content_td\"><p>{recipe.preparation}</p></td>\n        <td> \n          <button \n            name=\"delete\" \n            id={recipe.name} \n            onClick={deleteRecipe}\n            >\n            Delete\n          </button>\n        </td>\n      </tr>\n    </React.Fragment>\n  )\n}","import React from \"react\";\nimport RecipeCard from \"./RecipeCard\";\n\nfunction RecipeList({ recipes, deleteRecipe }) {\n  \n  // TODO: Display the list of recipes using the structure of table that is provided.\n  // TODO: Create at least one additional component that is used by this component.\n  // TODO: Each recipe row must have a delete button - <button name=\"delete\">Delete</button> - that deletes the post when clicked\n\n  return (\n    <div className=\"recipe-list\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Cuisine</th>\n            <th>Photo</th>\n            <th>Ingredients</th>\n            <th>Preparation</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {recipes.map((recipe, index) => <RecipeCard\n               key={index}\n               recipe={recipe}                                \n               deleteRecipe={deleteRecipe}   \n          />)\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default RecipeList;\n","/**\n* This is the data that is initially loaded.\n* Please do not modify this file.\n*/\n\nconst RecipeData = [\n  {\n    name: \"Tuna Poke with Mango\",\n    cuisine: \"Hawaiian\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/tunapokebowlwithmango22.jpg\",\n    ingredients: \"1 package of sushi grade tuna. 1 cup cooked quinoa ½ avocado, sliced. ½ mango, cubed. 1 shredded carrot. 1 small sliced cucumber. poke sauce.\",\n    preparation: \"1. Chop tuna into cubes. 2. Toss with 1 tbsp sesame oil and 1 tbsp tamari. Set aside. 3. Layer your poke bowl starting with quinoa. 4. Whisk all poke sauce ingredients in a bowl and pour over the poke bowl. 5. Garnish with sesame seeds and furikake. 6. Top with chopped scallions.\"\n  },\n  {\n    name: \"Guacamole\",\n    cuisine: \"Mexican\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/017.jpg\",\n    ingredients: \"3 ripe avocados. ¾ cup finely chopped Roma tomato. 2 serrano chiles very finely chopped (seeded and deveined). 3 heaping tablespoons of finely chopped onion. 3 tablespoons of minced cilantro. Salt to taste\",\n    preparation: \"1. Remove the flesh of the avocados. 2. Mash the avocados with the back of a fork. 3. Add the other ingredients and incorporate evenly. 4. Add salt to taste.\"\n  },\n];\n\nexport default RecipeData;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeCreate from \"./RecipeCreate\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeData from \"./RecipeData\"\n\nfunction App() {\n  const [recipes, setRecipes] = useState(RecipeData);\n  \n  const addRecipe = newRecipe => setRecipes([...recipes, newRecipe]);\n  \n   const deleteRecipe = ({target}) => setRecipes(recipes.filter(recipe => recipe.name !== target.id));\n\n  // TODO: Add the ability for the <RecipeList /> component to list and delete an existing recipe.\n  // TODO: Add the ability for the <RecipeCreate /> component to create new recipes.\n  \n\n  \n  return (\n    <div className=\"App\">\n      <header><h1>Delicious Food Recipes</h1></header>\n      <RecipeList recipes={recipes} deleteRecipe={deleteRecipe}/>\n      <RecipeCreate addRecipe={addRecipe}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}